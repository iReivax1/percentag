{"version":3,"file":"app.8c58990eac08217f9e30.hot-update.js","sources":["/Users/xavier/Programming/React/watchr2/src/recomPaper.js","/Users/xavier/Programming/React/watchr2/src/recommendCards.js"],"sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport RecommendCards from './recommendCards';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function RecomPaper(props) {\n  let showRecommend;\n  const classes = useStyles();\n  if (props.recommendation[0].title === \"\") {\n    showRecommend = <i>\n     Start Following Tags To View Articles Curated For You.\n    </i>\n  }\n  else{\n    showRecommend = <br/>\n  }\n \n\n  return (\n    <div className={classes.root}>\n      \n        \n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={1}>\n          \n            {/* From this article */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                  {showRecommend}\n                  {props.recommendation.map((e)=>{\n                  \n                  return <div key={e.title} ><RecommendCards recoCardTitle={e.title} recoCardImg={e.img} recoCardDate={e.date} recoCardMatch={e.match} recoCardUrl={e.url}/> <br/></div>\n                })}\n                  \n              </Paper>\n            </Grid>\n          </Grid>\n         \n        </Container>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { CardContent } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        color: \"black\",\n        cursor: \"pointer\"\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    date: {\n        fontSize: 10,\n        overflow: 'auto'\n    },\n    cover: {\n        width: 40,\n        minWidth: \"50px\",\n        height: \"auto\"\n    },\n    matchGreen: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        color: \"green\",\n        fontSize: 11\n    },\n    matchOrange: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        color: \"orange\",\n        fontSize: 11\n    },\n    matchRed: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        color: \"red\",\n        fontSize: 11\n    },\n    title: {\n        fontSize: 14,\n        overflow: 'auto'\n    }\n}));\n\nexport default function RecommendCards(props) {\n    const classes = useStyles();\n\n    let matchColor;\n    if (props.recoCardMatch < 50) {\n        matchColor = <Typography className={classes.matchRed} color=\"inherit\">\n            {props.recoCardMatch + \"% match\"}\n        </Typography>\n    }\n    else if (props.recoCardMatch > 75) {\n        matchColor = <Typography className={classes.matchGreen} color=\"inherit\">\n            {props.recoCardMatch + \"% match\"}\n        </Typography>\n    } else {\n        matchColor = <Typography className={classes.matchOrange} color=\"inherit\">\n            {props.recoCardMatch + \"% match\"}\n        </Typography>\n    }\n\n    return (\n        <Card className={classes.root}  onClick={() => { window.open(props.recoCardUrl); }} >\n                <CardMedia\n                    className={classes.cover}\n                    image={props.recoCardImg}\n                />\n                <div className={classes.details} >\n                    <CardContent className={classes.content}>\n                        <Typography className={classes.title} >\n                            {props.recoCardTitle}\n                        </Typography>\n                        <Typography className={classes.date} color=\"textSecondary\">\n                            {props.recoCardDate}\n                        </Typography>\n                    </CardContent>\n                    {matchColor}\n                </div>\n             \n        </Card>\n    );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAfA;AAoBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AA9CA;AAoDA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAmBA;;;;A","sourceRoot":""}