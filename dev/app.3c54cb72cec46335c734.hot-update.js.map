{"version":3,"file":"app.3c54cb72cec46335c734.hot-update.js","sources":["/Users/xavier/Programming/React/watchr2/src/Backend/apiCall.js"],"sourcesContent":["/*global chrome*/\nimport React, { Component } from 'react';\nimport '../App.css';\n\nexport default class ApiCall extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      currentURL: 'https://www.dealstreetasia.com/stories/aiot-startup-aiforward-77m-232438/',\n    };\n    this.sendTags = this.sendTags.bind(this);\n    this.getCurrentURL = this.getCurrentURL.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCurrentURL()\n    this.getTagApi()\n  }\n  getCurrentURL() {\n    chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n      let url = tabs[0].url;\n      \n      // use `url` here inside the callback because it's asynchronous!\n      this.setState({\n        currentURL: url\n      })\n    });\n    console.log(this.state.currentURL);\n    // chrome.tabs.onActivated.addListener((activeInfo) => {  \n    //   chrome.tabs.getSelected(null, function(tab) {\n    //     var tablink = tab.url\n    //     console.log(tablink)\n    //   })\n    // })\n  }\n  \n\n  getTagApi() {\n    this.callApi()\n      .then(res => this.sendTags(res.express))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n\n    const response = await fetch('http://localhost:5000/api/scrap', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url: \"https://www.dealstreetasia.com/stories/aiot-startup-aiforward-77m-232438/\" }),\n    });\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n  sendTags(value) {\n    this.props.getTags(value);\n  }\n\n\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:5000/api/forms', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n\n    this.setState({ responseToPost: body });\n  };\n\n  render() {\n    let tagArray = this.props.tags;\n\n    return (\n      <div className=\"App\">\n        {/* {tagArray.map(e => <p key={e}>{e}</p>)} */}\n\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AA2CA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AAtDA;AA6DA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAEA;AAAA;AAAA;AACA;AACA;AAvEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAcA;AACA;AACA;AACA;AAiBA;AACA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AAjGA;;;;A","sourceRoot":""}