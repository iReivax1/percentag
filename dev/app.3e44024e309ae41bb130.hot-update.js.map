{"version":3,"file":"app.3e44024e309ae41bb130.hot-update.js","sources":["/Users/xavier/Programming/React/watchr2/src/tags.js"],"sourcesContent":["/*global chrome*/\nimport React, { Component } from 'react'\nimport TagsPaper from './tagsPaper'\nimport CurrentTagPaper from './currentTagPaper'\nimport ApiCall from './Backend/apiCall';\n\nexport default class Tags extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: [\"apple\"],\n        };\n        this.getTags = this.getTags.bind(this);\n        this.getChromeStoragefunction = this.getChromeStoragefunction.bind(this)\n    }\n\n    componentDidMount() {\n        this.getChromeStoragefunction()\n    }\n    getChromeStoragefunction() {\n\n        chrome.storage.sync.get({ tags: [] }, function (result) {\n          var tags = result.tag;\n          if (typeof tags === \"undefined\") {\n            let emptyArray = [];\n            emptyArray.push(\"\");\n            return emptyArray;\n          } else {\n            result.tags.map(e => { console.log(e); })\n            console.log('Value currently is ' + result.key);\n            \n          }\n        });\n        chrome.storage.onChanged.addListener(function (changes, namespace) {\n          for (var key in changes) {\n            var storageChange = changes[key];\n            storageChange.newValue.map(e => { console.log(\"new values \" + e) })\n            // console.log('Storage key \"%s\" in namespace \"%s\" changed. ' +\n            //             'Old value was \"%s\", new value is \"%s\".',\n            //             key,\n            //             namespace,\n            //             storageChange.oldValue,\n            //             storageChange.newValue);\n          }\n          return storageChange.newValue;\n        });\n        \n    }\n    getTags(e) {\n        this.setState({\n            tags: e\n        })\n        console.log(e)\n    }\n\n    render() {\n\n        return (\n            <div >\n                <p>\n                    Get recommendations for articles that matches your\n                    interests when you follow more tags:\n                </p>\n                <b>\n                    You are following\n                </b>\n\n                <TagsPaper></TagsPaper>\n                <b>\n                    From this article\n                </b>\n                \n                <CurrentTagPaper tagArray={this.state.tags} />\n                <ApiCall getTags={this.getTags}  tags={this.state.tags}/>\n            </div>\n        )\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AAvEA;;;;A","sourceRoot":""}