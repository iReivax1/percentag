{"version":3,"file":"app.3025a1c250b71fbe5aff.hot-update.js","sources":["/Users/xavier/Programming/React/watchr2/src/recommendCards.js"],"sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { CardContent } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        color: \"black\"\n\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    date: {\n        fontSize: 10,\n        overflow: 'auto'\n    },\n    cover: {\n        width: 40,\n        minWidth: \"50px\",\n        height: \"auto\"\n    },\n    matchGreen: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        color: \"green\",\n        fontSize: 11\n    },\n    matchOrange: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        color: \"orange\",\n        fontSize: 11\n    },\n    matchRed: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        color: \"red\",\n        fontSize: 11\n    },\n    title: {\n        fontSize: 14,\n        overflow: 'auto'\n    },\n    cardAction: {\n        display: 'block',\n        textAlign: 'initial'\n    }\n}));\n\nexport default function RecommendCards(props) {\n    const classes = useStyles();\n\n    let matchColor;\n    if (props.recoCardMatch < 50) {\n        matchColor = <Typography className={classes.matchRed} color=\"inherit\">\n            {props.recoCardMatch + \"% match\"}\n        </Typography>\n    }\n    else if (props.recoCardMatch > 75) {\n        matchColor = <Typography className={classes.matchGreen} color=\"inherit\">\n            {props.recoCardMatch + \"% match\"}\n        </Typography>\n    } else {\n        matchColor = <Typography className={classes.matchOrange} color=\"inherit\">\n            {props.recoCardMatch + \"% match\"}\n        </Typography>\n    }\n\n    return (\n        <Card className={classes.root} >\n            <ButtonBase\n                className={props.classes.cardAction}\n                onClick={() => { window.open(props.recoCardUrl); }}\n            >\n                <CardMedia\n                    className={classes.cover}\n                    image={props.recoCardImg}\n                />\n                <div className={classes.details} >\n                    <CardContent className={classes.content}>\n                        <Typography className={classes.title} >\n                            {props.recoCardTitle}\n                        </Typography>\n                        <Typography className={classes.date} color=\"textSecondary\">\n                            {props.recoCardDate}\n                        </Typography>\n                    </CardContent>\n                    {matchColor}\n                </div>\n            </ButtonBase>\n        </Card>\n    );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAlDA;AAwDA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAuBA;;;;A","sourceRoot":""}