{"version":3,"file":"app.13b0dd3c35a275b3c790.hot-update.js","sources":["/Users/xavier/Programming/React/watchr2/src/Backend/apiCall.js"],"sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nexport default class ApiCall extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n    };\n    this.sendTags = this.sendTags.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('http://localhost:5000/api/scrap');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    console.log(\"body\");\n    return body;\n  };\n  sendTags(value) {\n    this.props.getTags(value);\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:5000/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n\n    this.setState({ responseToPost: body });\n  };\n\n  render() {\n    let tagArray = [...this.state.response];\n    this.sendTags(tagArray);\n    return (\n      <div className=\"App\">\n        {tagArray.map(e => <p key={e}>{e}</p>)}\n\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AA4BA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AAEA;AAAA;AAAA;AACA;AACA;AAtCA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAQA;AACA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AAhEA;;;;A","sourceRoot":""}