{"version":3,"file":"app.80311e85d835b0d0832b.hot-update.js","sources":["/Users/xavier/Programming/React/watchr2/src/recommend.js"],"sourcesContent":["/*global chrome*/\nimport React, { Component } from 'react';\nimport RecomPaper from './recomPaper';\n\nexport default class Recommend extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recommend:\n                [\n                    {\n                        title: \"Stripe's value huts $95B\",\n                        img: \"https://cdn.dealstreetasia.com/uploads/2018/09/Stripe-e1613972852450.png?fit=1024,512?resize=940,528\",\n                        date: Date().toLocaleString(),\n                        match: 95\n                    },\n                    {\n                        title: \"BEENEXT, Qualgro invest in Vietnamese edtech startup Edmicroâ€™s pre-Series A+ round\",\n                        img: \"https://cdn.dealstreetasia.com/uploads/2020/08/online-education-e1609923082605.png?fit=950,477?resize=940,528\",\n                        date: Date().toLocaleString(),\n                        match: 65\n                    }\n                ],\n            savedTags: [],\n        };\n        this.getTagApi = this.getTagApi.bind(this);\n        this.saveArrayToState = this.saveArrayToState.bind(this);\n        this.getRecommendation = this.getRecommendation.bind(this);\n    }\n    componentDidMount() {\n        let newThis = this;\n        chrome.storage.local.get(['tags'], function (result) {\n            newThis.setState({\n                savedTags: result.tags\n            })\n        });\n\n    }\n    saveArrayToState = (array) => {\n        this.setState({\n            savedTags: array\n        })\n    }\n\n    getRecommendation = async () => {\n        const response = await fetch('http://localhost:5000/api/scrap', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ url: this.state.currentURL }),\n        });\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    // getTagApi() {\n    //     this.callApiGetTag()\n    //         .then(res => { \n    //             this.setState({ savedTags: res.express }) \n    //         })\n    //         .catch(err => console.log(err));\n    // }\n    // callApiGetTag = async () => {\n    //     const response = await fetch('http://localhost:5000/api/getTags');\n    //     const body = await response.json();\n    //     if (response.status !== 200) throw Error(body.message);\n\n    //     return body;\n    //   };\n\n\n    render() {\n        return (\n            <div>\n                <p>Follow more tags to receive recommendations specific to your interest </p>\n                <b>\n                    Recommended For You\n                </b>\n                <RecomPaper recommendation={this.state.recommend} />\n\n            </div>\n\n        )\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAkCA;AACA;AADA;AAGA;AACA;AAtCA;AAwCA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AAjDA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAlFA;;;;A","sourceRoot":""}